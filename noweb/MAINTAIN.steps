
Beth and Jason,
  I've put together a new release of the pedigree software.

1. It's managed using the 'mercurial' source code control system.  This
is a test of this package to see what we think of it.  Since it is not
installed globally, the easiest thing is to add
	alias hg='/people/biostat2/therneau/util/mercurial-1.5/hg'
to your .bash_profile.  You might also want to copy and edit
~therneau/.hgrc to set default name and editor.  The latter is what is
pulled up automatically for your commit messages.

  Now find a location you like, and type
hg clone /people/biostat/genet/gplus/genet/rpack/kinship  kinship

This creates a local copy for yourself.  You can change files, test
them, whatever -- similar to svn or cvs
	hg add filename
 	hg commit
	hg help
          etc

You have a complete local repository, and all the commands act on that.
At any time you can do
	hg pull
to pull in changes found in Jason's central copy and
	hg push
to make your changes visible there.  But you can do local unpublished
changes as long as you like.

2. The code was created using noweb.  Again, it's not locally installed.
The shell script ~therneau/bin/noweb needs to be somewhere that you can
find it.  I'm not sure an alias will work since it is run out of
Makefiles.
   Nearly everything is in the inst/noweb subdirectory.
    "make all.pdf" to get the human readable documentation (50+ pages)
    "make fun" to populate the R/ directory with functions
The .Rnw files are what you edit, they are the true source.  Emacs
understands them.  A small number of files are "stand alone" in the R/
directory -- they are what is left after a "make clean".

  I have an R version of noweb 2/3 written, and it will be incorportated
into Sweave sometime in the future (personal correspondence).  That will
remove the need for the stand alone package.

3. The code uses the quadprog package to sovle the tree alignment
problem.  I have a local copy in ~therneau/Rlib, but this should be
added to our global R library. 

4. How to execute: You two can decide whether to make this available as
a library.

  When debugging: I make some changes in .Rnw, run 'make fun' there.
Then in the tests directory I have a file 'setup.s' which sources in all
the .R files.  

5. Changes
  a. The pedigree command now can create a single object with multiple
families.  See tests/ped71.r  Documentation needs to be updated.  The
makekinship function accepts pedigreeList objects.
  b. The plot.pedigree function tries to make boxes be 2.5 characters
wide.  Hence they scale with cex along with the text.  The symbolsize
argument multiplies this.
  c. The autohint function has gotton smarter - I hope.  (I can say with
certainty that it is different.)  Pedigrees do not have hints attached
to them unless you add them, see tests/ped3.r  We need to try out a
several pedigrees and see how it works.
  d. I think I have the textsize/boxsize/margins issues cleaned up so
that small pedigrees won't get chopped off.
  e. A subset arguement to plot.pedigree does not yet work correctly.
  f. The affected matrix can have as many columns as you want.

6. I was moving examples in the 'testped' directory over to 'tests' one
by one.


7. For Jason with the master copy to pull from another checked out 
copy (Martha's), issue this command:

 hg pull /people/biostat7/m056948/consult/pacgene/pedigrees/kinship2

 hg merge

 hg commit


